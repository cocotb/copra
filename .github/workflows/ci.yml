# Copyright cocotb contributors
# Licensed under the Revised BSD License, see LICENSE for details.
# SPDX-License-Identifier: BSD-3-Clause

name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: ${{ !(contains(github.ref, 'release/') || contains(github.ref, 'main')) }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '.gitignore'
      - '.pre-commit-config.yaml'
      - 'LICENSE'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - '.github/issue_template.md'
      - '.github/PULL_REQUEST_TEMPLATE.md'

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - name: Set up Python 3.12
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
      with:
        python-version: "3.12"
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Install dependencies
      run: uv pip install --system nox
    - name: Run linting
      run: nox -s lint

  test:
    name: Test - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.11", "3.12"]
        exclude:
          - os: windows-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.12"

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Install dependencies
      run: uv pip install --system nox

    - name: Run tests
      run: nox -s test-${{ matrix.python-version }}

  examples:
    name: Examples
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

    - name: Set up Python 3.12
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
      with:
        python-version: "3.12"

    - name: Set up Icarus Verilog
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends iverilog

    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Install dependencies
      run: uv pip install --system nox

    - name: Run examples
      run: nox -s examples

  all-checks:
    name: All checks passed
    needs: [lint, test, examples]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check if all required jobs succeeded
      if: |
        needs.lint.result != 'success' ||
        needs.test.result != 'success' ||
        needs.examples.result != 'success'
      run: |
        echo "One or more required jobs failed."
        exit 1
    - name: All checks passed
      run: echo "All required checks passed!"
